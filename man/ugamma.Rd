% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_the_unit_gamma_distribution.R
\name{ugamma}
\alias{ugamma}
\alias{dugamma}
\alias{pugamma}
\alias{qugamma}
\alias{rugamma}
\title{The Unit Gamma Distribution}
\usage{
dugamma(x, mu, sigma, log.p = FALSE)

pugamma(q, mu, sigma, lower.tail = TRUE)

qugamma(p, mu, sigma, lower.tail = TRUE)

rugamma(n, mu, sigma)
}
\arguments{
\item{x, q}{vector of quantiles.}

\item{mu}{vector of means, taking values on (0, 1).}

\item{sigma}{vector of dispersion parameters, taking values on (0, 1).}

\item{log.p}{logical; if TRUE, probabilities \code{p} are given as
\code{log(p)}.}

\item{lower.tail}{logical; if \code{TRUE} (default),
probabilities are \code{P(X <= x)}, otherwise, \code{P(X > x)}.}

\item{p}{vector of probabilities.}

\item{n}{number of random values to return.}
}
\value{
\code{dugamma} returns the probability function, \code{pugamma}
gives the distribution function, \code{qugamma} gives the quantile function,
and \code{rugamma} generates random observations.
}
\description{
Density, distribution function, quantile function, and random generation for the
    unit gamma distribution parameterized in terms of mean (\code{mu}) and dispersion \code{sigma}
    parameters.
}
\details{
A continuous random variable \eqn{Y} is said to follow a unit gamma distribution with mean
\eqn{\mu} and dispersion parameter \eqn{\sigma} if its probability density function is given by
\deqn{
f(y; \mu,\sigma) = \dfrac{y^{d(\mu,\sigma) - 1} d(\mu,\sigma)^{1/\sigma^2-1}}{\Gamma\left(\dfrac{1}{\sigma^2}-1\right)}\left\{\log \left(\frac{1}{y}\right) \right\}^{1/\sigma^2-2}, \quad y \in (0, 1),
}
where
\deqn{
 d(\mu,\sigma)=\frac{\mu^{\sigma^2/(1-\sigma^2)}}{1-\mu^{\sigma^2/(1-\sigma^2)}},
}
for \eqn{\mu, \sigma \in (0, 1)}.
}
\examples{
## Probability density function for some combinations of
## the parameter values
curve(dugamma(x, 0.25, 0.5), col = 1, ylim = c(0, 4), ylab = "Density")
curve(dugamma(x, 0.3, 0.5), col = 2, add = TRUE)
curve(dugamma(x, 0.5, 0.5), col = 3, add = TRUE)
curve(dugamma(x, 0.6, 0.5), col = 4, add = TRUE)
curve(dugamma(x, 0.73, 0.5), col = 6, add = TRUE)
legend("topleft", c(expression(mu == 0.25~","~ sigma==0.5),
                    expression(mu == 0.30~","~ sigma==0.5),
                    expression(mu == 0.50~","~ sigma==0.5)),
       lty = 1, col = 1:3, bty = "n")

legend("top", c(expression(mu == 0.60~","~ sigma==0.5),
                expression(mu == 0.73~","~ sigma==0.5)),
       lty = 1, col = c(4, 6), bty = "n")


## Random generation
y <- rugamma(1000, 0.25, 0.5)

hist(y, prob = TRUE, col = "white")
curve(dugamma(x, 0.25, 0.5), col = "blue", add = TRUE, lwd = 2)

plot(ecdf(y), col = "grey")
curve(pugamma(x, 0.25, 0.5), col = "blue", add = TRUE)

plot(ppoints(1000), quantile(y, probs = ppoints(1000)),
     xlab = "p", ylab = expression(p-"Quantile"), pch = 16, col = "grey")
curve(qugamma(x, 0.25, 0.5), col = "blue", add = TRUE)
}
\author{
Rodrigo M. R. de Medeiros <\email{rodrigo.matheus@live.com}>

Diego R. Canterle <\email{diegocanterle@gmail.com}>
}
